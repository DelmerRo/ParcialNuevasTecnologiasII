{"ast":null,"code":"import _objectSpread from \"C:/ORT/Nuevas Tecnologias II/SimilParcial/proyecto-vue-cli/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"src-components-formulario\",\n  props: [],\n  mounted: function mounted() {},\n  data: function data() {\n    return {\n      formState: {},\n      formData: this.getInicialData(),\n      nombreMinLength: 5,\n      nombreMaxLength: 15,\n      numDocMin: 100000,\n      numDocMax: 100000000,\n      minimoValor: 0,\n      gastos: []\n    };\n  },\n  methods: {\n    getInicialData: function getInicialData() {\n      return {\n        nombre: null,\n        Dni: null,\n        deuda: null,\n        pago: null,\n        fecha: null,\n        saldo: null\n      };\n    },\n    agregarPago: function agregarPago() {\n      var gasto = {\n        nombre: this.formData.nombre,\n        numDoc: this.formData.numDoc,\n        deuda: this.formData.deuda,\n        pago: this.formData.pago,\n        fecha: new Date().toLocaleString(),\n        saldo: this.formData.deuda - this.formData.pago\n      };\n      this.gastos.push(gasto);\n    },\n    enviar: function enviar() {\n      console.log(_objectSpread({}, this.formData));\n      this.formData = this.getInicialData();\n\n      this.formState._reset();\n    },\n    analizarSaldo: function analizarSaldo(gasto) {\n      var dif = gasto.pago - gasto.deuda;\n      var color = '#080';\n      if (dif > 0) color = '#00F';\n      if (dif < 0) color = '#F00';\n      return {\n        valor: dif,\n        color: color\n      };\n    }\n  },\n  computed: {}\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA;EACAA,iCADA;EAEAC,SAFA;EAGAC,OAHA,qBAGA,EAHA;EAIAC,IAJA,kBAIA;IACA;MACAC,aADA;MAEAC,+BAFA;MAGAC,kBAHA;MAIAC,mBAJA;MAKAC,iBALA;MAMAC,oBANA;MAOAC,cAPA;MAQAC;IARA;EAUA,CAfA;EAgBAC;IACAC,cADA,4BACA;MACA;QACAC,YADA;QAEAC,SAFA;QAGAC,WAHA;QAIAC,UAJA;QAKAC,WALA;QAMAC;MANA;IAQA,CAVA;IAWAC,WAXA,yBAWA;MACA;QACAN,4BADA;QAEAO,4BAFA;QAGAL,0BAHA;QAIAC,wBAJA;QAKAC,kCALA;QAMAC;MANA;MAQA;IACA,CArBA;IAuBAG,MAvBA,oBAuBA;MACAC;MACA;;MACA;IACA,CA3BA;IA4BAC,aA5BA,yBA4BAC,KA5BA,EA4BA;MACA;MACA;MACA;MACA;MACA;QACAC,UADA;QAEAC;MAFA;IAIA;EArCA,CAhBA;EAwDAC;AAxDA","names":["name","props","mounted","data","formState","formData","nombreMinLength","nombreMaxLength","numDocMin","numDocMax","minimoValor","gastos","methods","getInicialData","nombre","Dni","deuda","pago","fecha","saldo","agregarPago","numDoc","enviar","console","analizarSaldo","gasto","valor","color","computed"],"sourceRoot":"src/components","sources":["Formulario.vue"],"sourcesContent":["<template>\n  <section class=\"src-components-formulario\">\n    <div class=\"jumbotron\">\n      <h2>Componente Formulario</h2>\n      <hr />\n      <hr />\n      <br />\n\n      <vue-form :state=\"formState\" @submit.prevent=\"enviar()\">\n        <!-- --------------------- -->\n        <!--     Campo nombre      -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"nombre\">Nombre</label>\n          <input\n            type=\"text\"\n            id=\"nombre\"\n            name=\"nombre\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.trim=\"formData.nombre\"\n            required\n            :minlength=\"nombreMinLength\"\n            :maxlength=\"nombreMaxLength\"\n            no-espacios\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"nombre\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n\n            <div slot=\"minlength\" class=\"alert alert-danger mt-1\">\n              Este campo requiere como mínimo {{ nombreMinLength }} caracteres.\n            </div>\n\n            <div slot=\"maxlength\" class=\"alert alert-danger mt-1\">\n              Este campo requiere como maximo {{ nombreMaxLength }} caracteres.\n            </div>\n\n            <div slot=\"no-espacios\" class=\"alert alert-danger mt-1\">\n              No se permiten espacios intermedios en este campo.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- --------------------- -->\n        <!--      Campo Numero De Documento       -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"numDoc\">NumDoc</label>\n          <input\n            type=\"number\"\n            id=\"numDoc\"\n            name=\"numDoc\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.number=\"formData.numDoc\"\n            required\n            :min=\"numDocMin\"\n            :max=\"numDocMax\"\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"numDoc\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n            <div slot=\"min\" class=\"alert alert-danger mt-1\">\n             El numero de documento mínima permitida es de {{ numDocMin }} años.\n            </div>\n            <div slot=\"max\" class=\"alert alert-danger mt-1\">\n             El numero de documento máxima permitida es de {{ numDocMax }} años.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n  <!-- --------------------- -->\n        <!--    Campo Deuda    -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"deuda\">Deuda</label>\n          <input\n            type=\"number\"\n            id=\"deuda\"\n            name=\"deuda\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.number=\"formData.deuda\"\n            required\n            :min=\"minimoValor\"\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"deuda\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n            <div slot=\"min\" class=\"alert alert-danger mt-1\">\n             La Deuda Ingresada tiene que se mayor a {{minimoValor}}.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- --------------------- -->\n        <!--    Campo Total a Pagar     -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"pago\">Pago</label>\n          <input\n            type=\"number\"\n            id=\"pago\"\n            name=\"pago\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.number=\"formData.pago\"\n            required\n            :min=\"minimoValor\"\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"pago\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n            <div slot=\"min\" class=\"alert alert-danger mt-1\">\n             El pago Ingresada tiene que se mayor a {{minimoValor}}.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- Botón de envío -->\n        <button\n          class=\"btn btn-success my-4\"\n          :disabled=\"formState.$invalid\"\n          @click=\"agregarPago()\"\n        >\n          Enviar\n        </button>\n      </vue-form>\n      <hr>\n      <br>\n      <h1>DETALLE DE GASTOS</h1>\n          <div v-if=\"gastos.length\" class=\"table-responsive\">\n      <table class=\"table table-dark\">\n        <tr>\n          <th>Nombre</th>\n          <th>DNI</th>\n          <th>Deuda</th>\n           <th>Pago</th>\n             <th>Fecha</th>\n               <th>Saldo</th>\n        </tr>\n        <tr v-for=\"(gasto, index) in gastos\" :key=\"index\" :style=\"{color:analizarSaldo(gasto).color}\">\n         <td>{{ gasto.nombre }}</td>\n          <td>{{ gasto.numDoc }}</td>\n          <td>{{ gasto.deuda }}</td>\n          <td>{{ gasto.pago }}</td>\n          <td>{{ gasto.fecha}}</td>\n          <td >{{ analizarSaldo(gasto).valor }}</td>\n        </tr>\n      </table>\n      </div>\n      <h3 v-else class=\"alert alert-info\">No hay gastos ingresados</h3>\n    </div>\n     \n  </section>\n</template>\n\n<script >\nexport default {\n  name: \"src-components-formulario\",\n  props: [],\n  mounted() {},\n  data() {\n    return {\n      formState: {},\n      formData: this.getInicialData(),\n      nombreMinLength: 5,\n      nombreMaxLength: 15,\n       numDocMin: 100000,\n      numDocMax: 100000000,\n      minimoValor:0,\n      gastos: [],\n    };\n  },\n  methods: {\n    getInicialData() {\n      return {\n        nombre: null,\n        Dni: null,\n        deuda: null,\n        pago:null,\n        fecha:null,\n        saldo:null\n      };\n    },\n    agregarPago() {\n      const gasto = {\n        nombre: this.formData.nombre,\n        numDoc: this.formData.numDoc,\n        deuda: this.formData.deuda,\n        pago: this.formData.pago,\n        fecha: new Date().toLocaleString(),\n        saldo: this.formData.deuda - this.formData.pago,\n      };\n      this.gastos.push(gasto);\n    },\n\n    enviar() {\n      console.log({ ...this.formData });\n      this.formData = this.getInicialData();\n      this.formState._reset();\n    },\n  analizarSaldo(gasto) {\n        let dif = gasto.pago - gasto.deuda\n        let color = '#080'\n        if(dif > 0) color = '#00F'\n        if(dif < 0) color = '#F00'\n        return {\n          valor : dif,\n          color\n        }\n      },\n\n  },\n  computed: {},\n};\n</script>\n\n<style scoped lang=\"css\">\n.src-components-formulario {\n}\n\n.jumbotron {\n  background-color: steelblue;\n\n  color: white;\n}\n\nhr {\n  background-color: #bbb;\n}\n\npre {\n  color: aliceblue;\n}\n</style>"]},"metadata":{},"sourceType":"module"}