{"ast":null,"code":"import _regeneratorRuntime from \"C:/ORT/Nuevas Tecnologias II/TP4/proyecto-vue-cli/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/ORT/Nuevas Tecnologias II/TP4/proyecto-vue-cli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'src-componentes-http-client',\n  props: [],\n  mounted: function mounted() {},\n  data: function data() {\n    return {\n      // url: 'https://jsonplaceholder.typicode.com/usuarios',\n      url: 'https://628b0d3f667aea3a3e2655ba.mockapi.io/usuarios',\n      usuarios: [\n        /* \n        {\n        userId: 1,\n        id: 1,\n        title: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        body: \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        {\n        userId: 1,\n        id: 2,\n        title: \"qui est esse\",\n        body: \"est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis qui aperiam non debitis possimus qui neque nisi nulla\"\n        },\n        {\n        userId: 1,\n        id: 3,\n        title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n        body: \"et iusto sed quo iure voluptatem occaecati omnis eligendi aut ad voluptatem doloribus vel accusantium quis pariatur molestiae porro eius odio et labore et velit aut\"\n        }          \n        */\n      ]\n    };\n  },\n  methods: {\n    /* -------------------------------------- */\n\n    /*       XHR con interface Promise        */\n\n    /* -------------------------------------- */\n    //https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\n    //https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Using_promises\n    wrapperXHRpromise: function wrapperXHRpromise() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('get', _this.url);\n        xhr.addEventListener('load', function () {\n          if (xhr.status == 200) {\n            var respuesta = JSON.parse(xhr.response); //console.log(respuesta)\n\n            resolve(respuesta);\n          } else {\n            console.error('ERROR XHR cb (status)', xhr.status);\n            var error = {\n              title: 'ERROR XHR cb (status)',\n              status: xhr.status\n            };\n            reject(error);\n          }\n        });\n        xhr.addEventListener('error', function (e) {\n          console.error('ERROR XHR cb (ajax)', e);\n          var error = {\n            title: 'ERROR XHR cb (ajax)',\n            info: e\n          };\n          reject(error);\n        });\n        xhr.send();\n      });\n    },\n\n    /* -------------------------------------------------------------------- */\n\n    /*   Petici贸n Ajax (Asynchronous Javascript And XML) con XHR callback   */\n\n    /* -------------------------------------------------------------------- */\n    getUsuariosXHRcb: function getUsuariosXHRcb() {\n      var _this2 = this;\n\n      var xhr = new XMLHttpRequest();\n      xhr.open('get', this.url);\n      xhr.addEventListener('load', function () {\n        if (xhr.status == 200) {\n          var respuesta = JSON.parse(xhr.response); //console.log(respuesta)\n\n          _this2.usuarios = respuesta;\n        } else {\n          console.error('ERROR XHR cb (status)', xhr.status);\n        }\n      });\n      xhr.addEventListener('error', function (e) {\n        console.error('ERROR XHR cb (ajax)', e);\n      });\n      xhr.send();\n    },\n\n    /* -------------------------------------------------------------------------------------------- */\n\n    /*   Petici贸n Ajax (Asynchronous Javascript And XML) con XHR callback wrapeado en una promise   */\n\n    /* -------------------------------------------------------------------------------------------- */\n    getUsuariosXHRpromise: function getUsuariosXHRpromise() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var respuesta;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this3.wrapperXHRpromise();\n\n              case 3:\n                respuesta = _context.sent;\n                //console.log(respuesta)\n                _this3.usuarios = respuesta;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('Error XHRpromise', _context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n\n    /* ------------------------------------------------------------- */\n\n    /*   Petici贸n Ajax (Asynchronous Javascript And XML) con Fetch   */\n\n    /* ------------------------------------------------------------- */\n    getUsuariosFetch: function getUsuariosFetch() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, respuesta;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetch(_this4.url);\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 6;\n                return response.json();\n\n              case 6:\n                respuesta = _context2.sent;\n                _this4.usuarios = respuesta;\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error('Error Fetch', _context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 10]]);\n      }))();\n    },\n\n    /* ------------------------------------------------------------- */\n\n    /*   Petici贸n Ajax (Asynchronous Javascript And XML) con Axios   */\n\n    /* ------------------------------------------------------------- */\n    //https://axios-http.com/docs/intro\n    //https://github.com/axios/axios\n    //https://www.npmjs.com/package/axios\n    //https://www.npmjs.com/package/vue-axios\n    getUsuariosAxios: function getUsuariosAxios() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$_this5$axios, data;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _this5.axios(_this5.url);\n\n              case 3:\n                _yield$_this5$axios = _context3.sent;\n                data = _yield$_this5$axios.data;\n                _this5.usuarios = data;\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error('Error Axios', _context3.t0);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 8]]);\n      }))();\n    }\n  },\n  computed: {}\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;EACAA,mCADA;EAEAC,SAFA;EAGAC,OAHA,qBAGA,CAEA,CALA;EAMAC,IANA,kBAMA;IACA;MACA;MACAC,2DAFA;MAGAC;QAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAnBA;IAHA;EAwBA,CA/BA;EAgCAC;IACA;;IACA;;IACA;IACA;IACA;IAEAC,iBAPA,+BAOA;MAAA;;MACA;QAEA;QACAC;QAEAA;UACA;YACA,yCADA,CAEA;;YACAC;UACA,CAJA,MAKA;YACAC;YACA;cACAC,8BADA;cAEAC;YAFA;YAIAC;UACA;QACA,CAdA;QAgBAL;UACAE;UACA;YACAC,4BADA;YAEAG;UAFA;UAIAD;QACA,CAPA;QASAL;MACA,CA/BA;IAgCA,CAxCA;;IAyCA;;IACA;;IACA;IACAO,gBA5CA,8BA4CA;MAAA;;MACA;MACAP;MAEAA;QACA;UACA,yCADA,CAEA;;UACA;QACA,CAJA,MAKA;UACAE;QACA;MACA,CATA;MAWAF;QACAE;MACA,CAFA;MAIAF;IACA,CAhEA;;IAkEA;;IACA;;IACA;IACAQ,qBArEA,mCAqEA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAWA,0BAXA;;cAAA;gBAWAC,SAXA;gBAYA;gBACA;gBAbA;gBAAA;;cAAA;gBAAA;gBAAA;gBAgBAP;;cAhBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAkBA,CAvFA;;IAwFA;;IACA;;IACA;IACAQ,gBA3FA,8BA2FA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAeAC,iBAfA;;cAAA;gBAeAC,QAfA;gBAAA;gBAAA,OAiBAA,eAjBA;;cAAA;gBAiBAH,SAjBA;gBAkBA;gBAlBA;gBAAA;;cAAA;gBAAA;gBAAA;gBAqBAP;;cArBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAuBA,CAlHA;;IAmHA;;IACA;;IACA;IACA;IACA;IACA;IACA;IAEAW,gBA3HA,8BA2HA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OA0BA,wBA1BA;;cAAA;gBAAA;gBA0BAlB,IA1BA,uBA0BAA,IA1BA;gBA2BA;gBA3BA;gBAAA;;cAAA;gBAAA;gBAAA;gBA8BAO;;cA9BA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAgCA;EA3JA,CAhCA;EA6LAY;AA7LA","names":["name","props","mounted","data","url","usuarios","methods","wrapperXHRpromise","xhr","resolve","console","title","status","reject","info","getUsuariosXHRcb","getUsuariosXHRpromise","respuesta","getUsuariosFetch","fetch","response","getUsuariosAxios","computed"],"sourceRoot":"src/components","sources":["HttpClient.vue"],"sourcesContent":["<template>\n\n  <section class=\"src-componentes-http-client\">\n     <div class=\"jumbotron\">\n      <h2>Componente HttpClient</h2>\n      <hr>\n      <hr>\n      <br>\n\n      <button class=\"btn btn-warning my-3 mr-3\" @click=\"getUsuariosXHRcb()\">Pedir XHR (cb)</button>\n      <button class=\"btn btn-success my-3 mr-3\" @click=\"getUsuariosXHRpromise()\">Pedir XHR (promise)</button>\n      <button class=\"btn btn-success my-3 mr-3\" @click=\"getUsuariosFetch()\">Pedir Fetch </button>\n      <button class=\"btn btn-success my-3 mr-3\" @click=\"getUsuariosAxios()\">Pedir Axios </button>\n      <button class=\"btn btn-danger my-3\" @click=\"usuarios=[]\">CLEAR</button>\n      <br>\n\n      <div v-if=\"usuarios.length\" class=\"table-responsive\">\n        <table class=\"table table-dark\">\n          <tr>\n            <th>Id</th>\n            <th>Nombre</th>\n            <th>Email</th>\n            <th>Telefono</th>\n          </tr>\n          <tr v-for=\"(usuario, index) in usuarios\" :key=\"index\">\n              <td>{{ usuario.id }}</td>\n              <td>{{ usuario.nombre }}</td>\n              <td>{{ usuario.email }}</td>\n                <td>{{ usuario.telefono }}</td>\n          </tr>\n        </table>\n        <h5 class=\"alert alert-primary\">Se encontraron {{usuarios.length}} usuarios.</h5>\n      </div>\n      <h4 v-else class=\"alert alert-danger text-center\">No se encontraron usuarios</h4>\n\n     </div>\n  </section>\n\n</template>\n\n<script>\n\n  export default  {\n    name: 'src-componentes-http-client',\n    props: [],\n    mounted () {\n\n    },\n    data () {\n      return {\n       // url: 'https://jsonplaceholder.typicode.com/usuarios',\n        url:'https://628b0d3f667aea3a3e2655ba.mockapi.io/usuarios',\n        usuarios: [/* \n          {\n            userId: 1,\n            id: 1,\n            title: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n            body: \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\"\n          },\n          {\n            userId: 1,\n            id: 2,\n            title: \"qui est esse\",\n            body: \"est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis qui aperiam non debitis possimus qui neque nisi nulla\"\n          },\n          {\n            userId: 1,\n            id: 3,\n            title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n            body: \"et iusto sed quo iure voluptatem occaecati omnis eligendi aut ad voluptatem doloribus vel accusantium quis pariatur molestiae porro eius odio et labore et velit aut\"\n          }          \n         */]\n      }\n    },\n    methods: {\n      /* -------------------------------------- */\n      /*       XHR con interface Promise        */\n      /* -------------------------------------- */\n      //https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\n      //https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Using_promises\n\n      wrapperXHRpromise() {\n        return new Promise((resolve,reject) => {\n         \n          const xhr = new XMLHttpRequest()\n          xhr.open('get', this.url)\n\n          xhr.addEventListener('load', () => {\n            if(xhr.status == 200) {\n              let respuesta = JSON.parse(xhr.response)\n              //console.log(respuesta)\n              resolve(respuesta)\n            }\n            else {\n              console.error('ERROR XHR cb (status)', xhr.status)\n              let error = {\n                title: 'ERROR XHR cb (status)',\n                status: xhr.status\n              }\n              reject(error)\n            }\n          })\n\n          xhr.addEventListener('error', e => {\n              console.error('ERROR XHR cb (ajax)', e)\n              let error = {\n                title: 'ERROR XHR cb (ajax)',\n                info: e\n              }\n              reject(error)\n          })\n\n          xhr.send()\n        })\n      },\n      /* -------------------------------------------------------------------- */\n      /*   Petici贸n Ajax (Asynchronous Javascript And XML) con XHR callback   */\n      /* -------------------------------------------------------------------- */\n      getUsuariosXHRcb() {\n          const xhr = new XMLHttpRequest()\n          xhr.open('get', this.url)\n\n          xhr.addEventListener('load', () => {\n            if(xhr.status == 200) {\n              let respuesta = JSON.parse(xhr.response)\n              //console.log(respuesta)\n              this.usuarios = respuesta\n            }\n            else {\n              console.error('ERROR XHR cb (status)', xhr.status)\n            }\n          })\n\n          xhr.addEventListener('error', e => {\n              console.error('ERROR XHR cb (ajax)', e)\n          })\n\n          xhr.send()\n      },\n\n      /* -------------------------------------------------------------------------------------------- */\n      /*   Petici贸n Ajax (Asynchronous Javascript And XML) con XHR callback wrapeado en una promise   */\n      /* -------------------------------------------------------------------------------------------- */\n      async getUsuariosXHRpromise() {\n          // -----  UTILIZANDO LA SINTAXIS THEN/CATCH ----\n          /* this.wrapperXHRpromise()\n            .then(respuesta => {\n              //console.log(respuesta)\n              this.usuarios = respuesta\n            })\n            .catch(error => console.error('Error XHRpromise', error)) */\n\n          // -----  UTILIZANDO LA SINTAXIS ASYNC/AWAIT ----\n          try {\n            let respuesta = await this.wrapperXHRpromise()\n            //console.log(respuesta)\n            this.usuarios = respuesta\n          }\n          catch(error) {\n            console.error('Error XHRpromise', error)\n          }\n      },\n      /* ------------------------------------------------------------- */\n      /*   Petici贸n Ajax (Asynchronous Javascript And XML) con Fetch   */\n      /* ------------------------------------------------------------- */\n      async getUsuariosFetch() {\n        // -----  UTILIZANDO LA SINTAXIS THEN/CATCH ----\n        /* fetch(this.url)\n          .then(response => {\n            //console.log(response)\n            return response.json()\n          })\n          .then(respuesta => {\n            //console.log(respuesta)\n            this.usuarios = respuesta\n          })\n          .catch(error => console.error('Error Fetch', error)) */\n\n        // -----  UTILIZANDO LA SINTAXIS ASYNC/AWAIT ----\n        try {\n          let response = await fetch(this.url)\n          //console.log(response)\n          let respuesta = await response.json()\n          this.usuarios = respuesta\n        }\n        catch(error) {\n          console.error('Error Fetch', error)\n        }\n      },\n      /* ------------------------------------------------------------- */\n      /*   Petici贸n Ajax (Asynchronous Javascript And XML) con Axios   */\n      /* ------------------------------------------------------------- */\n      //https://axios-http.com/docs/intro\n      //https://github.com/axios/axios\n      //https://www.npmjs.com/package/axios\n      //https://www.npmjs.com/package/vue-axios\n\n      async getUsuariosAxios() {\n        // -----  UTILIZANDO LA SINTAXIS THEN/CATCH ----\n        /* this.axios(this.url)\n          //.then(respuesta => {\n            //console.log(respuesta)\n          //  this.usuarios = respuesta.data\n          //})\n\n          //con destructuring object\n          //.then(rta => {\n          .then(({ data }) => {\n            //console.log(respuesta)\n            \n            //let data = rta.data\n\n            //let { data } = rta    //destructuring object\n\n            //let { data:datos } = rta    //destructuring object (alias)\n            //this.usuarios = datos\n            \n            this.usuarios = data\n          })\n          .catch(error => console.error('Error Axios', error))    */\n        \n        // -----  UTILIZANDO LA SINTAXIS ASYNC/AWAIT ----               \n        try {\n          let { data } = await this.axios(this.url)\n          this.usuarios = data\n        }\n        catch(error) {\n          console.error('Error Axios', error)\n        }   \n      }\n    },\n    computed: {\n\n    }\n}\n\n\n</script>\n\n<style scoped lang=\"css\">\n  .src-componentes-http-client {\n\n  }\n\n  .jumbotron {\n    background-color: teal;\n    color: white;\n  }\n\n  hr {\n    background-color: #bbb;\n  }  \n</style>\n"]},"metadata":{},"sourceType":"module"}