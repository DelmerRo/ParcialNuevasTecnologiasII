{"ast":null,"code":"import _objectSpread from \"C:/ORT/Nuevas Tecnologias II/TP4/proyecto-vue-cli/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"src-components-formulario\",\n  props: [],\n  mounted: function mounted() {},\n  data: function data() {\n    return {\n      formState: {},\n      formData: this.getInicialData(),\n      nombreMinLength: 5,\n      nombreMaxLength: 15,\n      edadMin: 18,\n      edadMax: 120,\n      personas: []\n    };\n  },\n  methods: {\n    getInicialData: function getInicialData() {\n      return {\n        nombre: \"\",\n        edad: \"\",\n        email: \"\"\n      };\n    },\n    agregarPersona: function agregarPersona() {\n      var persona = {\n        nombre: this.formData.nombre,\n        edad: this.formData.edad,\n        email: this.formData.email\n      };\n      this.personas.push(persona);\n    },\n    enviar: function enviar() {\n      //SPREAD OPERATOR -> obj = {a:1,b:2} -> ...obj -> a:1,b:2 -> { ...obj } -> Clon de obj\n      //SPREAD OPERATOR -> array = [1,2] -> ...array -> 1,2 -> [...array ] -> Clon del array\n      console.log(_objectSpread({}, this.formData));\n      this.formData = this.getInicialData(); //reste de los datos del vue-form\n\n      this.formState._reset(); //reset de los estados del vue-form\n\n    }\n  },\n  computed: {}\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;EACAA,iCADA;EAEAC,SAFA;EAGAC,OAHA,qBAGA,EAHA;EAIAC,IAJA,kBAIA;IACA;MACAC,aADA;MAEAC,+BAFA;MAGAC,kBAHA;MAIAC,mBAJA;MAKAC,WALA;MAMAC,YANA;MAOAC;IAPA;EASA,CAdA;EAeAC;IACAC,cADA,4BACA;MACA;QACAC,UADA;QAEAC,QAFA;QAGAC;MAHA;IAKA,CAPA;IAQAC,cARA,4BAQA;MACA;QACAH,4BADA;QAEAC,wBAFA;QAGAC;MAHA;MAKA;IACA,CAfA;IAiBAE,MAjBA,oBAiBA;MACA;MACA;MACAC;MAEA,sCALA,CAKA;;MACA,wBANA,CAMA;;IACA;EAxBA,CAfA;EAyCAC;AAzCA","names":["name","props","mounted","data","formState","formData","nombreMinLength","nombreMaxLength","edadMin","edadMax","personas","methods","getInicialData","nombre","edad","email","agregarPersona","enviar","console","computed"],"sourceRoot":"src/components","sources":["Formulario.vue"],"sourcesContent":["\n<template>\n  <section class=\"src-components-formulario\">\n    <div class=\"jumbotron\">\n      <h2>Componente Formulario</h2>\n      <hr />\n      <hr />\n      <br />\n\n      <vue-form :state=\"formState\" @submit.prevent=\"enviar()\">\n        <!-- --------------------- -->\n        <!--     Campo nombre      -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"nombre\">Nombre</label>\n          <input\n            type=\"text\"\n            id=\"nombre\"\n            name=\"nombre\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.trim=\"formData.nombre\"\n            required\n            :minlength=\"nombreMinLength\"\n            :maxlength=\"nombreMaxLength\"\n            no-espacios\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"nombre\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n\n            <div slot=\"minlength\" class=\"alert alert-danger mt-1\">\n              Este campo requiere como mínimo {{ nombreMinLength }} caracteres.\n            </div>\n\n            <div slot=\"maxlength\" class=\"alert alert-danger mt-1\">\n              Este campo requiere como maximo {{ nombreMaxLength }} caracteres.\n            </div>\n\n            <div slot=\"no-espacios\" class=\"alert alert-danger mt-1\">\n              No se permiten espacios intermedios en este campo.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- --------------------- -->\n        <!--      Campo edad       -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"edad\">Edad</label>\n          <input\n            type=\"number\"\n            id=\"edad\"\n            name=\"edad\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.number=\"formData.edad\"\n            required\n            :min=\"edadMin\"\n            :max=\"edadMax\"\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"edad\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n            <div slot=\"min\" class=\"alert alert-danger mt-1\">\n              La edad mínima permitida es de {{ edadMin }} años.\n            </div>\n            <div slot=\"max\" class=\"alert alert-danger mt-1\">\n              La edad máxima permitida es de {{ edadMax }} años.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- --------------------- -->\n        <!--    Campo email     -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"email\">email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.trim=\"formData.email\"\n            required\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"email\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n            <div slot=\"email\" class=\"alert alert-danger mt-1\">\n              Email no válido\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- Botón de envío -->\n        <button\n          class=\"btn btn-success my-4\"\n          \n          @click=\"agregarPersona()\"\n        >\n          Enviar\n        </button>\n      </vue-form>\n      <table class=\"table table-dark\">\n        <tr>\n          <th>Nombre</th>\n          <th>Edad</th>\n          <th>Email</th>\n        </tr>\n        <tr v-for=\"(persona, index) in personas\" :key=\"index\">\n          <td>{{ persona.nombre }}</td>\n          <td>{{ persona.edad }}</td>\n          <td>{{ persona.email }}</td>\n        </tr>\n      </table>\n\n      <hr />\n      <p><u>formData</u></p>\n      <pre>{{ formData }}</pre>\n\n      <hr />\n      <p><u>formState</u></p>\n      <pre>{{ formState }}</pre>\n    </div>\n  </section>\n</template>\n\n<script >\nexport default {\n  name: \"src-components-formulario\",\n  props: [],\n  mounted() {},\n  data() {\n    return {\n      formState: {},\n      formData: this.getInicialData(),\n      nombreMinLength: 5,\n      nombreMaxLength: 15,\n      edadMin: 18,\n      edadMax: 120,\n      personas: [],\n    };\n  },\n  methods: {\n    getInicialData() {\n      return {\n        nombre: \"\",\n        edad: \"\",\n        email: \"\",\n      };\n    },\n    agregarPersona() {\n      const persona = {\n        nombre: this.formData.nombre,\n        edad: this.formData.edad,\n        email: this.formData.email,\n      };\n      this.personas.push(persona);\n    },\n\n    enviar() {\n      //SPREAD OPERATOR -> obj = {a:1,b:2} -> ...obj -> a:1,b:2 -> { ...obj } -> Clon de obj\n      //SPREAD OPERATOR -> array = [1,2] -> ...array -> 1,2 -> [...array ] -> Clon del array\n      console.log({ ...this.formData });\n\n      this.formData = this.getInicialData(); //reste de los datos del vue-form\n      this.formState._reset(); //reset de los estados del vue-form\n    },\n  },\n  computed: {},\n};\n</script>\n\n<style scoped lang=\"css\">\n.src-components-formulario {\n}\n\n.jumbotron {\n  background-color: darkcyan;\n  color: white;\n}\n\nhr {\n  background-color: #bbb;\n}\n\npre {\n  color: aliceblue;\n}\n</style>"]},"metadata":{},"sourceType":"module"}