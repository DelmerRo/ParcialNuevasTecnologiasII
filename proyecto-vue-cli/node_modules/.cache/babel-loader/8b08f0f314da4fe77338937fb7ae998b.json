{"ast":null,"code":"import _objectSpread from \"C:/ORT/Nuevas Tecnologias II/EsqueletoParcial/proyecto-vue-cli/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"src-components-formulario\",\n  props: [],\n  mounted: function mounted() {},\n  data: function data() {\n    return {\n      formstate: {},\n      formData: this.getInitialData(),\n      nombreMinLength: 5,\n      nombreMaxLength: 15,\n      numDocMin: 100000,\n      numDocMax: 100000000,\n      minimoValor: 0,\n      gastos: []\n    };\n  },\n  methods: {\n    getInitialData: function getInitialData() {\n      return {\n        nombre: null,\n        Dni: null,\n        deuda: null,\n        pago: null\n      };\n    },\n    enviar: function enviar() {\n      var gasto = _objectSpread({}, this.formData);\n\n      gasto.fecha = new Date().toLocaleString();\n      console.log(gasto);\n      this.gastos.push(gasto);\n      this.formData = this.getInitialData();\n\n      this.formstate._reset();\n    },\n    analizarSaldo: function analizarSaldo(gasto) {\n      var dif = gasto.deuda - gasto.pago;\n      var color = \"#080\";\n      if (dif > 0) color = \"#00F\";\n      if (dif < 0) color = \"#F00\";\n      return {\n        valor: dif,\n        color: color\n      };\n    }\n  },\n  computed: {\n    actualizarCantidadPorEstado: function actualizarCantidadPorEstado() {\n      var personasConDeuda = this.gastos.filter(function (gasto) {\n        return gasto.saldo > 0;\n      }).length;\n      var personasSinDeuda = this.gastos.filter(function (gasto) {\n        return gasto.saldo < 0;\n      }).length;\n      var personasNeutras = this.gastos.filter(function (gasto) {\n        return gasto.saldo = 0;\n      }).length;\n      var totalRegistros = this.gastos.length;\n      return {\n        conDeuda: personasConDeuda,\n        total: totalRegistros,\n        sinDeuda: personasSinDeuda,\n        neutros: personasNeutras\n      };\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA;EACAA,iCADA;EAEAC,SAFA;EAGAC,OAHA,qBAGA,EAHA;EAIAC,IAJA,kBAIA;IACA;MACAC,aADA;MAEAC,+BAFA;MAGAC,kBAHA;MAIAC,mBAJA;MAKAC,iBALA;MAMAC,oBANA;MAOAC,cAPA;MAQAC;IARA;EAUA,CAfA;EAgBAC;IACAC,cADA,4BACA;MACA;QACAC,YADA;QAEAC,SAFA;QAGAC,WAHA;QAIAC;MAJA;IAMA,CARA;IAUAC,MAVA,oBAUA;MACA;;MACAC;MAEAC;MACA;MAEA;;MACA;IACA,CAnBA;IAoBAC,aApBA,yBAoBAF,KApBA,EAoBA;MACA;MACA;MACA;MACA;MACA;QACAG,UADA;QAEAC;MAFA;IAIA;EA7BA,CAhBA;EA+CAC;IACAC,2BADA,yCACA;MACA,0CACA;QAAA;MAAA,CADA,EAEAC,MAFA;MAGA,0CACA;QAAA;MAAA,CADA,EAEAA,MAFA;MAGA,yCACA;QAAA;MAAA,CADA,EAEAA,MAFA;MAGA;MAEA;QACAC,0BADA;QAEAC,qBAFA;QAGAC,0BAHA;QAIAC;MAJA;IAMA;EAnBA;AA/CA","names":["name","props","mounted","data","formstate","formData","nombreMinLength","nombreMaxLength","numDocMin","numDocMax","minimoValor","gastos","methods","getInitialData","nombre","Dni","deuda","pago","enviar","gasto","console","analizarSaldo","valor","color","computed","actualizarCantidadPorEstado","length","conDeuda","total","sinDeuda","neutros"],"sourceRoot":"src/components","sources":["Formulario.vue"],"sourcesContent":["<template>\n  <section class=\"src-components-formulario\">\n    <div class=\"jumbotron\">\n      <h2>Componente Formulario</h2>\n      <hr />\n      <hr />\n      <br />\n\n      <vue-form :state=\"formstate\" @submit.prevent=\"enviar()\">\n        <!-- --------------------- -->\n        <!--     Campo nombre      -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"nombre\">Nombre</label>\n          <input\n            type=\"text\"\n            id=\"nombre\"\n            name=\"nombre\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.trim=\"formData.nombre\"\n            required\n            :minlength=\"nombreMinLength\"\n            :maxlength=\"nombreMaxLength\"\n            no-espacios\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"nombre\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n\n            <div slot=\"minlength\" class=\"alert alert-danger mt-1\">\n              Este campo requiere como mínimo {{ nombreMinLength }} caracteres.\n            </div>\n\n            <div slot=\"maxlength\" class=\"alert alert-danger mt-1\">\n              Este campo requiere como maximo {{ nombreMaxLength }} caracteres.\n            </div>\n\n            <div slot=\"no-espacios\" class=\"alert alert-danger mt-1\">\n              No se permiten espacios intermedios en este campo.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- --------------------- -->\n        <!--      Campo Numero De Documento       -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"numDoc\">NumDoc</label>\n          <input\n            type=\"number\"\n            id=\"numDoc\"\n            name=\"numDoc\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.number=\"formData.numDoc\"\n            required\n            :min=\"numDocMin\"\n            :max=\"numDocMax\"\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"numDoc\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n            <div slot=\"min\" class=\"alert alert-danger mt-1\">\n              El numero de documento mínima permitida es de\n              {{ numDocMin }} años.\n            </div>\n            <div slot=\"max\" class=\"alert alert-danger mt-1\">\n              El numero de documento máxima permitida es de\n              {{ numDocMax }} años.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- --------------------- -->\n        <!--    Campo Deuda    -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"deuda\">Deuda</label>\n          <input\n            type=\"number\"\n            id=\"deuda\"\n            name=\"deuda\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.number=\"formData.deuda\"\n            required\n            :min=\"minimoValor\"\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"deuda\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n            <div slot=\"min\" class=\"alert alert-danger mt-1\">\n              La Deuda Ingresada tiene que se mayor a {{ minimoValor }}.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- --------------------- -->\n        <!--    Campo Total a Pagar     -->\n        <!-- --------------------- -->\n        <validate tag=\"div\">\n          <!-- Elemento de entrada -->\n          <label for=\"pago\">Pago</label>\n          <input\n            type=\"number\"\n            id=\"pago\"\n            name=\"pago\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            v-model.number=\"formData.pago\"\n            required\n            :min=\"minimoValor\"\n          />\n\n          <!-- Mensajes de validación -->\n          <field-messages name=\"pago\" show=\"$dirty\">\n            <!-- <div class=\"alert alert-success mt-1\">Success!</div> -->\n            <div slot=\"required\" class=\"alert alert-danger mt-1\">\n              Campo requerido\n            </div>\n            <div slot=\"min\" class=\"alert alert-danger mt-1\">\n              El pago Ingresada tiene que se mayor a {{ minimoValor }}.\n            </div>\n          </field-messages>\n        </validate>\n        <br />\n\n        <!-- Botón de envío -->\n        <button\n          class=\"btn btn-success my-4\"\n          :disabled=\"formstate.$invalid\"\n          type=\"submit\"\n        >\n          Enviar\n        </button>\n      </vue-form>\n      <hr />\n      <br />\n      <h1>DETALLE DE GASTOS</h1>\n      <br />\n      <div v-if=\"gastos.length\" class=\"table-responsive\">\n        <table class=\"table table-dark\">\n          <tr>\n            <th>Nombre</th>\n            <th>DNI</th>\n            <th>Deuda</th>\n            <th>Pago</th>\n            <th>Fecha</th>\n            <th>Saldo</th>\n          </tr>\n          <tr\n            v-for=\"(gasto, index) in gastos\"\n            :key=\"index\"\n            :style=\"{ color: analizarSaldo(gasto).color }\"\n          >\n            <td>{{ gasto.nombre }}</td>\n            <td>{{ gasto.numDoc }}</td>\n            <td>{{ gasto.deuda }}</td>\n            <td>{{ gasto.pago }}</td>\n            <td>{{ gasto.fecha }}</td>\n            <td>{{ analizarSaldo(gasto).valor }}</td>\n          </tr>\n        </table>\n      </div>\n      <h3 v-else class=\"alert alert-info\">No hay gastos ingresados</h3>\n    </div>\n    <span class=\"alert alert-info\"\n      >Cantidad de registros: {{ actualizarCantidadPorEstado.total }}</span\n    >\n  </section>\n</template>\n\n<script >\nexport default {\n  name: \"src-components-formulario\",\n  props: [],\n  mounted() {},\n  data() {\n    return {\n      formstate: {},\n      formData: this.getInitialData(),\n      nombreMinLength: 5,\n      nombreMaxLength: 15,\n      numDocMin: 100000,\n      numDocMax: 100000000,\n      minimoValor: 0,\n      gastos: [],\n    };\n  },\n  methods: {\n    getInitialData() {\n      return {\n        nombre: null,\n        Dni: null,\n        deuda: null,\n        pago: null,\n      };\n    },\n\n    enviar() {\n      let gasto = { ...this.formData };\n      gasto.fecha = new Date().toLocaleString();\n\n      console.log(gasto);\n      this.gastos.push(gasto);\n\n      this.formData = this.getInitialData();\n      this.formstate._reset();\n    },\n    analizarSaldo(gasto) {\n      let dif = gasto.deuda - gasto.pago;\n      let color = \"#080\";\n      if (dif > 0) color = \"#00F\";\n      if (dif < 0) color = \"#F00\";\n      return {\n        valor: dif,\n        color,\n      };\n    },\n  },\n  computed: {\n    actualizarCantidadPorEstado() {\n      let personasConDeuda = this.gastos.filter(\n        (gasto) => gasto.saldo > 0\n      ).length;\n      let personasSinDeuda = this.gastos.filter(\n        (gasto) => gasto.saldo < 0\n      ).length;\n      let personasNeutras = this.gastos.filter(\n        (gasto) => (gasto.saldo = 0)\n      ).length;\n      let totalRegistros = this.gastos.length;\n\n      return {\n        conDeuda: personasConDeuda,\n        total: totalRegistros,\n        sinDeuda: personasSinDeuda,\n        neutros: personasNeutras,\n      };\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"css\">\n.src-components-formulario {\n}\n\n.jumbotron {\n  background-color: steelblue;\n\n  color: white;\n}\n\nhr {\n  background-color: #bbb;\n}\n\npre {\n  color: aliceblue;\n}\n</style>"]},"metadata":{},"sourceType":"module"}